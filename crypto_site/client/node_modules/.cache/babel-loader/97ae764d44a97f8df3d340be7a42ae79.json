{"ast":null,"code":"var _jsxFileName = \"/Users/liamwhite/proj/node/websocket/crypto-project-cs355/crypto_site/client/src/components/App.jsx\";\nimport React from 'react';\nimport CoinCard from './CoinCard.jsx';\nimport Chart from './Chart.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet coinAndPrice = []; //TODO: break-out coinAndPrice logic\n\nfunction App(props) {\n  let match = coinAndPrice.filter(element => {\n    if (element.coin == props.coin) {\n      return element;\n    }\n  });\n\n  if (match.length === 0) {\n    let componentKey = Math.random() * Math.random();\n  } else {\n    if (props.type == 'spot') {\n      match[0].price = props.price;\n    }\n\n    if (props.type == 'history') {\n      match[0].history = props.history;\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [coinAndPrice.map(element => /*#__PURE__*/_jsxDEV(CoinCard, {\n      coin: element.coin,\n      price: element.price\n    }, element.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)), \" \", coinAndHistory.map(element => /*#__PURE__*/_jsxDEV(Chart, {\n      coin: element.coin,\n      history: element.history\n    }, element.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n} //     if(props.type == 'history'){\n//         let match = coinAndPrice.filter(element => {\n//             if(element.coin == props.coin){\n//                 return element;\n//             }\n//         });\n//         if(match.length === 0){\n//             let componentKey = Math.random() * Math.random();\n//             return (\n//                 <div>\n//                     <Chart\n//                         key={componentKey}\n//                         coin={props.coin}\n//                         history={props.history}\n//                     />\n//                 </div>\n//             )\n//         }\n//     }\n// }\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/liamwhite/proj/node/websocket/crypto-project-cs355/crypto_site/client/src/components/App.jsx"],"names":["React","CoinCard","Chart","coinAndPrice","App","props","match","filter","element","coin","length","componentKey","Math","random","type","price","history","map","key","coinAndHistory"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,IAAIC,YAAY,GAAG,EAAnB,C,CAEA;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AACX,MAAIC,KAAK,GAAGH,YAAY,CAACI,MAAb,CAAoBC,OAAO,IAAI;AACvC,QAAGA,OAAO,CAACC,IAAR,IAAgBJ,KAAK,CAACI,IAAzB,EAA8B;AAC1B,aAAOD,OAAP;AACH;AACJ,GAJW,CAAZ;;AAKA,MAAGF,KAAK,CAACI,MAAN,KAAiB,CAApB,EAAsB;AAClB,QAAIC,YAAY,GAAGC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACC,MAAL,EAAnC;AACH,GAFD,MAEO;AACH,QAAGR,KAAK,CAACS,IAAN,IAAc,MAAjB,EAAwB;AACpBR,MAAAA,KAAK,CAAC,CAAD,CAAL,CAASS,KAAT,GAAiBV,KAAK,CAACU,KAAvB;AACH;;AACD,QAAGV,KAAK,CAACS,IAAN,IAAc,SAAjB,EAA2B;AACvBR,MAAAA,KAAK,CAAC,CAAD,CAAL,CAASU,OAAT,GAAmBX,KAAK,CAACW,OAAzB;AACH;AACJ;;AAAA;AACD,sBACI;AAAA,eAAMb,YAAY,CAACc,GAAb,CAAiBT,OAAO,iBAC1B,QAAC,QAAD;AAEI,MAAA,IAAI,EAAEA,OAAO,CAACC,IAFlB;AAGI,MAAA,KAAK,EAAED,OAAO,CAACO;AAHnB,OACSP,OAAO,CAACU,GADjB;AAAA;AAAA;AAAA;AAAA,YADE,CAAN,OAMIC,cAAc,CAACF,GAAf,CAAmBT,OAAO,iBAC1B,QAAC,KAAD;AAEI,MAAA,IAAI,EAAEA,OAAO,CAACC,IAFlB;AAGI,MAAA,OAAO,EAAED,OAAO,CAACQ;AAHrB,OACSR,OAAO,CAACU,GADjB;AAAA;AAAA;AAAA;AAAA,YADA,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,C,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;KAtDSd,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport CoinCard from './CoinCard.jsx'\nimport Chart from './Chart.jsx'\n\nlet coinAndPrice = [];\n\n//TODO: break-out coinAndPrice logic\nfunction App(props){\n        let match = coinAndPrice.filter(element => {\n            if(element.coin == props.coin){\n                return element\n            }\n        });\n        if(match.length === 0){\n            let componentKey = Math.random() * Math.random();\n        } else {\n            if(props.type == 'spot'){\n                match[0].price = props.price;\n            }\n            if(props.type == 'history'){\n                match[0].history = props.history;\n            }\n        };\n        return (\n            <div>{coinAndPrice.map(element =>\n                <CoinCard\n                    key={element.key}\n                    coin={element.coin}\n                    price={element.price}\n                />\n            )} {coinAndHistory.map(element =>\n                <Chart\n                    key={element.key}\n                    coin={element.coin}\n                    history={element.history}\n                />\n            )}</div>\n        )\n    }\n\n//     if(props.type == 'history'){\n//         let match = coinAndPrice.filter(element => {\n//             if(element.coin == props.coin){\n//                 return element;\n//             }\n//         });\n//         if(match.length === 0){\n//             let componentKey = Math.random() * Math.random();\n//             return (\n//                 <div>\n//                     <Chart\n//                         key={componentKey}\n//                         coin={props.coin}\n//                         history={props.history}\n//                     />\n//                 </div>\n//             )\n//         }\n        \n//     }\n   \n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}