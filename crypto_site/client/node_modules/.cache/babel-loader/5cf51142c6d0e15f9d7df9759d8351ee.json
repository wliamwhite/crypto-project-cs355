{"ast":null,"code":"var _jsxFileName = \"/Users/liamwhite/proj/node/websocket/crypto-project-cs355/crypto_site/client/src/components/CoinCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentTime = new Date().toLocaleTimeString();\n\nfunction CoinCard(props) {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const closePrices = props.history.reverse();\n    const width = canvas.width;\n    const height = canvas.height;\n    const margin = 75;\n    const chartWidth = width - 2 * margin;\n    const chartHeight = height - 2 * margin; // Calculate the maximum and minimum prices\n\n    const maxPrice = Math.max(...closePrices);\n    const minPrice = Math.min(...closePrices); // Function to convert price to Y coordinate\n\n    function getPriceY(price) {\n      return chartHeight - (price - minPrice) / (maxPrice - minPrice) * chartHeight + margin;\n    } // Clear the canvas\n\n\n    ctx.clearRect(0, 0, width, height); // Draw X and Y axis\n\n    ctx.strokeStyle = '#000000';\n    ctx.beginPath();\n    ctx.moveTo(margin, margin);\n    ctx.lineTo(margin, height - margin);\n    ctx.lineTo(width - margin, height - margin);\n    ctx.stroke(); // Draw the line chart\n\n    ctx.beginPath(); //Change color based on price change\n\n    if (closePrices[0] > closePrices[closePrices.length - 1]) {\n      ctx.strokeStyle = '#ff1313';\n    } else {\n      ctx.strokeStyle = '#03A619';\n    }\n\n    ctx.lineWidth = 2;\n    closePrices.forEach((price, index) => {\n      const x = margin + index / (closePrices.length - 1) * chartWidth;\n      const y = getPriceY(price);\n\n      if (index === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    });\n    ctx.stroke(); // Draw X-axis labels\n\n    ctx.fillStyle = '#000000';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    const newLocal = interval.value;\n    const intervalNumber = parseInt(newLocal.match(/\\d+/)[0]);\n    const intervalString = newLocal.match(/[a-zA-Z]+/)[0];\n    const vertexNumber = closePrices.length;\n    const xLabels = [intervalNumber * vertexNumber + ' ' + intervalString + 's ago', intervalNumber * vertexNumber * .75 + ' ' + intervalString + 's ago', intervalNumber * vertexNumber * .5 + ' ' + intervalString + 's ago', intervalNumber * vertexNumber * .25 + ' ' + intervalString + 's ago', 'Now']; // Replace with your own labels\n\n    xLabels.forEach((label, index) => {\n      const x = margin + index / (xLabels.length - 1) * chartWidth;\n      const y = height - margin + 5;\n      ctx.fillText(label, x, y);\n    }); // Draw Y-axis labels\n\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    const yLabels = [minPrice, (minPrice + maxPrice) / 2, maxPrice]; // Replace with your own labels\n\n    yLabels.forEach((label, index) => {\n      const x = margin - 5;\n      const y = getPriceY(label);\n      ctx.fillText(label.toFixed(2), x, y);\n    });\n  }, [props.history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"individualCoin\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"coinName\",\n      children: props.coin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"coinPrice\",\n      children: [\"Current Price: $\", props.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 125\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 130\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 11\n  }, this);\n}\n\n_s(CoinCard, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = CoinCard;\nexport default CoinCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinCard\");","map":{"version":3,"sources":["/Users/liamwhite/proj/node/websocket/crypto-project-cs355/crypto_site/client/src/components/CoinCard.jsx"],"names":["React","useEffect","useRef","currentTime","Date","toLocaleTimeString","CoinCard","props","canvasRef","canvas","current","ctx","getContext","closePrices","history","reverse","width","height","margin","chartWidth","chartHeight","maxPrice","Math","max","minPrice","min","getPriceY","price","clearRect","strokeStyle","beginPath","moveTo","lineTo","stroke","length","lineWidth","forEach","index","x","y","fillStyle","font","textAlign","textBaseline","newLocal","interval","value","intervalNumber","parseInt","match","intervalString","vertexNumber","xLabels","label","fillText","yLabels","toFixed","coin"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst currentTime = new Date().toLocaleTimeString();\n\nfunction CoinCard(props) {\n    const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const closePrices = (props.history).reverse();\n\n    const width = canvas.width;\n    const height = canvas.height;\n    const margin = 75;\n    const chartWidth = width - 2 * margin;\n    const chartHeight = height - 2 * margin;\n\n    // Calculate the maximum and minimum prices\n    const maxPrice = Math.max(...closePrices);\n    const minPrice = Math.min(...closePrices);\n\n    // Function to convert price to Y coordinate\n    function getPriceY(price) {\n      return chartHeight - ((price - minPrice) / (maxPrice - minPrice)) * chartHeight + margin;\n    }\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw X and Y axis\n    ctx.strokeStyle = '#000000';\n    ctx.beginPath();\n    ctx.moveTo(margin, margin);\n    ctx.lineTo(margin, height - margin);\n    ctx.lineTo(width - margin, height - margin);\n    ctx.stroke();\n\n    // Draw the line chart\n    ctx.beginPath();\n\n    //Change color based on price change\n    if(closePrices[0] > closePrices[closePrices.length - 1]){\n        ctx.strokeStyle = '#ff1313';\n    }\n    else{\n        ctx.strokeStyle = '#03A619';\n    }\n    ctx.lineWidth = 2;\n    closePrices.forEach((price, index) => {\n      const x = margin + (index / (closePrices.length - 1)) * chartWidth;\n      const y = getPriceY(price);\n      if (index === 0) {\n      ctx.moveTo(x, y);\n      } else {\n      ctx.lineTo(x, y);\n      }\n    });\n    ctx.stroke();\n\n    // Draw X-axis labels\n    ctx.fillStyle = '#000000';\n    ctx.font = '12px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    const newLocal = interval.value;\n    const intervalNumber = parseInt(newLocal.match(/\\d+/)[0]);\n    const intervalString = newLocal.match(/[a-zA-Z]+/)[0];\n    const vertexNumber = closePrices.length;\n    const xLabels = [intervalNumber*vertexNumber + ' ' + intervalString + 's ago', intervalNumber*vertexNumber*.75 + ' ' + intervalString + 's ago', intervalNumber*vertexNumber*(.5) + ' ' + intervalString + 's ago', intervalNumber*vertexNumber*.25 + ' ' + intervalString + 's ago', 'Now']; // Replace with your own labels\n    xLabels.forEach((label, index) => {\n      const x = margin + (index / (xLabels.length - 1)) * chartWidth;\n      const y = height - margin + 5;\n      ctx.fillText(label, x, y);\n    });\n\n    // Draw Y-axis labels\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    const yLabels = [minPrice, (minPrice + maxPrice) / 2, maxPrice]; // Replace with your own labels\n    yLabels.forEach((label, index) => {\n      const x = margin - 5;\n      const y = getPriceY(label);\n      ctx.fillText(label.toFixed(2), x, y);\n    })\n  }, [props.history]);\n\n  return (<div class=\"individualCoin\"><p id=\"coinName\">{props.coin}</p><h1 id=\"coinPrice\">Current Price: ${props.price}</h1><br/><canvas ref={canvasRef} width={800} height={400}></canvas></div>);\n}\n\nexport default CoinCard;"]},"metadata":{},"sourceType":"module"}