{"ast":null,"code":"var _jsxFileName = \"/Users/liamwhite/Documents/projects/node/websocket/client/src/index.js\";\nconst server = new WebSocket('ws://localhost:8080');\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst input = document.getElementById('message');\nconst button = document.getElementById('send');\nbutton.disabled = true;\nbutton.addEventListener('click', sendMessage, false);\ndocument.addEventListener('keyup', e => {\n  if (e.key === 'Enter') {\n    sendMessage();\n  }\n});\n\nserver.onopen = () => {\n  button.disabled = false;\n};\n\nserver.onmessage = event => {\n  const {\n    data\n  } = event;\n  let tickerInfo = createTickerInfo(data);\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n    coin: tickerInfo.ticker,\n    price: tickerInfo.price\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n};\n\nfunction createTickerInfo(data) {\n  let ticker = '',\n      price = '',\n      seenAsterisk = 0;\n\n  for (let x = 0; x < data.length; x++) {\n    if (data[x] !== '*') {\n      switch (seenAsterisk) {\n        case 0:\n          ticker += data[x];\n\n        case 1:\n          price += data[x];\n\n        default:\n          console.log('no case to match seenAsterisk expression');\n      }\n\n      console.log(price);\n    } else {\n      seenAsterisk += 1;\n    }\n  }\n\n  return {\n    ticker: ticker,\n    price: price\n  };\n}\n\n;\n\nfunction sendMessage() {\n  const text = input.value;\n  server.send(text);\n}\n\n;","map":{"version":3,"sources":["/Users/liamwhite/Documents/projects/node/websocket/client/src/index.js"],"names":["server","WebSocket","React","ReactDOM","App","input","document","getElementById","button","disabled","addEventListener","sendMessage","e","key","onopen","onmessage","event","data","tickerInfo","createTickerInfo","render","ticker","price","seenAsterisk","x","length","console","log","text","value","send"],"mappings":";AAAA,MAAMA,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AAGA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;AAEAC,MAAM,CAACC,QAAP,GAAkB,IAAlB;AACAD,MAAM,CAACE,gBAAP,CAAwB,OAAxB,EAAiCC,WAAjC,EAA8C,KAA9C;AACAL,QAAQ,CAACI,gBAAT,CAA0B,OAA1B,EAAmCE,CAAC,IAAI;AACpC,MAAGA,CAAC,CAACC,GAAF,KAAU,OAAb,EAAqB;AACjBF,IAAAA,WAAW;AACd;AACJ,CAJD;;AAMAX,MAAM,CAACc,MAAP,GAAgB,MAAM;AAClBN,EAAAA,MAAM,CAACC,QAAP,GAAkB,KAAlB;AACH,CAFD;;AAIAT,MAAM,CAACe,SAAP,GAAmBC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AAEA,MAAIE,UAAU,GAAGC,gBAAgB,CAACF,IAAD,CAAjC;AAEAd,EAAAA,QAAQ,CAACiB,MAAT,eACA,QAAC,GAAD;AACI,IAAA,IAAI,EAAEF,UAAU,CAACG,MADrB;AAEI,IAAA,KAAK,EAAEH,UAAU,CAACI;AAFtB;AAAA;AAAA;AAAA;AAAA,UADA,EAKGhB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALH;AAMH,CAXD;;AAaA,SAASY,gBAAT,CAA0BF,IAA1B,EAA+B;AAC3B,MAAII,MAAM,GAAG,EAAb;AAAA,MAAiBC,KAAK,GAAG,EAAzB;AAAA,MAA6BC,YAAY,GAAG,CAA5C;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,IAAI,CAACQ,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAChC,QAAGP,IAAI,CAACO,CAAD,CAAJ,KAAY,GAAf,EAAmB;AACf,cAAOD,YAAP;AACI,aAAK,CAAL;AAAQF,UAAAA,MAAM,IAAIJ,IAAI,CAACO,CAAD,CAAd;;AACR,aAAK,CAAL;AAAQF,UAAAA,KAAK,IAAIL,IAAI,CAACO,CAAD,CAAb;;AACR;AAASE,UAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AAHb;;AAKAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH,KAPD,MAOO;AACHC,MAAAA,YAAY,IAAI,CAAhB;AACH;AACJ;;AACD,SAAO;AACHF,IAAAA,MAAM,EAAEA,MADL;AAEHC,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH;;AAAA;;AAED,SAASX,WAAT,GAAsB;AAClB,QAAMiB,IAAI,GAAGvB,KAAK,CAACwB,KAAnB;AACA7B,EAAAA,MAAM,CAAC8B,IAAP,CAAYF,IAAZ;AACH;;AAAA","sourcesContent":["const server = new WebSocket('ws://localhost:8080');\nimport React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App.jsx';\n\n\nconst input = document.getElementById('message')\nconst button = document.getElementById('send')\n\nbutton.disabled = true;\nbutton.addEventListener('click', sendMessage, false);\ndocument.addEventListener('keyup', e => {\n    if(e.key === 'Enter'){\n        sendMessage()\n    }\n})\n\nserver.onopen = () => {\n    button.disabled = false;\n};\n\nserver.onmessage = event => {\n    const { data } = event;\n\n    let tickerInfo = createTickerInfo(data)\n\n    ReactDOM.render(\n    <App\n        coin={tickerInfo.ticker}\n        price={tickerInfo.price}\n    />\n     , document.getElementById('root'))\n};\n\nfunction createTickerInfo(data){\n    let ticker = '', price = '', seenAsterisk = 0;\n    for(let x = 0; x < data.length; x++){\n        if(data[x] !== '*'){\n            switch(seenAsterisk){\n                case 0: ticker += data[x];\n                case 1: price += data[x];\n                default: console.log('no case to match seenAsterisk expression')\n            }\n            console.log(price);\n        } else {\n            seenAsterisk += 1;\n        }\n    }\n    return {\n        ticker: ticker,\n        price: price\n    }\n};\n\nfunction sendMessage(){\n    const text = input.value;\n    server.send(text);\n};"]},"metadata":{},"sourceType":"module"}